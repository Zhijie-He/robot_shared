// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file JoystickMsg.hpp
 * This header file contains the declaration of the described types in the IDL file.
 *
 * This file was generated by the tool fastddsgen (version: 4.1.0).
 */

#ifndef FAST_DDS_GENERATED__WLROBOT_MSG_JOYSTICKMSG_HPP
#define FAST_DDS_GENERATED__WLROBOT_MSG_JOYSTICKMSG_HPP

#include <cstdint>
#include <utility>

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#define eProsima_user_DllExport __declspec( dllexport )
#else
#define eProsima_user_DllExport
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define eProsima_user_DllExport
#endif  // _WIN32

#if defined(_WIN32)
#if defined(EPROSIMA_USER_DLL_EXPORT)
#if defined(JOYSTICKMSG_SOURCE)
#define JOYSTICKMSG_DllAPI __declspec( dllexport )
#else
#define JOYSTICKMSG_DllAPI __declspec( dllimport )
#endif // JOYSTICKMSG_SOURCE
#else
#define JOYSTICKMSG_DllAPI
#endif  // EPROSIMA_USER_DLL_EXPORT
#else
#define JOYSTICKMSG_DllAPI
#endif // _WIN32

namespace wlrobot {

namespace msg {

/*!
 * @brief This class represents the structure JoystickMsg defined by the user in the IDL file.
 * @ingroup JoystickMsg
 */
class JoystickMsg
{
public:

    /*!
     * @brief Default constructor.
     */
    eProsima_user_DllExport JoystickMsg()
    {
    }

    /*!
     * @brief Default destructor.
     */
    eProsima_user_DllExport ~JoystickMsg()
    {
    }

    /*!
     * @brief Copy constructor.
     * @param x Reference to the object JoystickMsg that will be copied.
     */
    eProsima_user_DllExport JoystickMsg(
            const JoystickMsg& x)
    {
                    m_lx = x.m_lx;

                    m_ly = x.m_ly;

                    m_rx = x.m_rx;

                    m_ry = x.m_ry;

                    m_lt = x.m_lt;

                    m_rt = x.m_rt;

                    m_a = x.m_a;

                    m_b = x.m_b;

                    m_x = x.m_x;

                    m_y = x.m_y;

                    m_start = x.m_start;

                    m_select = x.m_select;

                    m_l1 = x.m_l1;

                    m_r1 = x.m_r1;

                    m_l3 = x.m_l3;

                    m_r3 = x.m_r3;

    }

    /*!
     * @brief Move constructor.
     * @param x Reference to the object JoystickMsg that will be copied.
     */
    eProsima_user_DllExport JoystickMsg(
            JoystickMsg&& x) noexcept
    {
        m_lx = x.m_lx;
        m_ly = x.m_ly;
        m_rx = x.m_rx;
        m_ry = x.m_ry;
        m_lt = x.m_lt;
        m_rt = x.m_rt;
        m_a = x.m_a;
        m_b = x.m_b;
        m_x = x.m_x;
        m_y = x.m_y;
        m_start = x.m_start;
        m_select = x.m_select;
        m_l1 = x.m_l1;
        m_r1 = x.m_r1;
        m_l3 = x.m_l3;
        m_r3 = x.m_r3;
    }

    /*!
     * @brief Copy assignment.
     * @param x Reference to the object JoystickMsg that will be copied.
     */
    eProsima_user_DllExport JoystickMsg& operator =(
            const JoystickMsg& x)
    {

                    m_lx = x.m_lx;

                    m_ly = x.m_ly;

                    m_rx = x.m_rx;

                    m_ry = x.m_ry;

                    m_lt = x.m_lt;

                    m_rt = x.m_rt;

                    m_a = x.m_a;

                    m_b = x.m_b;

                    m_x = x.m_x;

                    m_y = x.m_y;

                    m_start = x.m_start;

                    m_select = x.m_select;

                    m_l1 = x.m_l1;

                    m_r1 = x.m_r1;

                    m_l3 = x.m_l3;

                    m_r3 = x.m_r3;

        return *this;
    }

    /*!
     * @brief Move assignment.
     * @param x Reference to the object JoystickMsg that will be copied.
     */
    eProsima_user_DllExport JoystickMsg& operator =(
            JoystickMsg&& x) noexcept
    {

        m_lx = x.m_lx;
        m_ly = x.m_ly;
        m_rx = x.m_rx;
        m_ry = x.m_ry;
        m_lt = x.m_lt;
        m_rt = x.m_rt;
        m_a = x.m_a;
        m_b = x.m_b;
        m_x = x.m_x;
        m_y = x.m_y;
        m_start = x.m_start;
        m_select = x.m_select;
        m_l1 = x.m_l1;
        m_r1 = x.m_r1;
        m_l3 = x.m_l3;
        m_r3 = x.m_r3;
        return *this;
    }

    /*!
     * @brief Comparison operator.
     * @param x JoystickMsg object to compare.
     */
    eProsima_user_DllExport bool operator ==(
            const JoystickMsg& x) const
    {
        return (m_lx == x.m_lx &&
           m_ly == x.m_ly &&
           m_rx == x.m_rx &&
           m_ry == x.m_ry &&
           m_lt == x.m_lt &&
           m_rt == x.m_rt &&
           m_a == x.m_a &&
           m_b == x.m_b &&
           m_x == x.m_x &&
           m_y == x.m_y &&
           m_start == x.m_start &&
           m_select == x.m_select &&
           m_l1 == x.m_l1 &&
           m_r1 == x.m_r1 &&
           m_l3 == x.m_l3 &&
           m_r3 == x.m_r3);
    }

    /*!
     * @brief Comparison operator.
     * @param x JoystickMsg object to compare.
     */
    eProsima_user_DllExport bool operator !=(
            const JoystickMsg& x) const
    {
        return !(*this == x);
    }

    /*!
     * @brief This function sets a value in member lx
     * @param _lx New value for member lx
     */
    eProsima_user_DllExport void lx(
            float _lx)
    {
        m_lx = _lx;
    }

    /*!
     * @brief This function returns the value of member lx
     * @return Value of member lx
     */
    eProsima_user_DllExport float lx() const
    {
        return m_lx;
    }

    /*!
     * @brief This function returns a reference to member lx
     * @return Reference to member lx
     */
    eProsima_user_DllExport float& lx()
    {
        return m_lx;
    }


    /*!
     * @brief This function sets a value in member ly
     * @param _ly New value for member ly
     */
    eProsima_user_DllExport void ly(
            float _ly)
    {
        m_ly = _ly;
    }

    /*!
     * @brief This function returns the value of member ly
     * @return Value of member ly
     */
    eProsima_user_DllExport float ly() const
    {
        return m_ly;
    }

    /*!
     * @brief This function returns a reference to member ly
     * @return Reference to member ly
     */
    eProsima_user_DllExport float& ly()
    {
        return m_ly;
    }


    /*!
     * @brief This function sets a value in member rx
     * @param _rx New value for member rx
     */
    eProsima_user_DllExport void rx(
            float _rx)
    {
        m_rx = _rx;
    }

    /*!
     * @brief This function returns the value of member rx
     * @return Value of member rx
     */
    eProsima_user_DllExport float rx() const
    {
        return m_rx;
    }

    /*!
     * @brief This function returns a reference to member rx
     * @return Reference to member rx
     */
    eProsima_user_DllExport float& rx()
    {
        return m_rx;
    }


    /*!
     * @brief This function sets a value in member ry
     * @param _ry New value for member ry
     */
    eProsima_user_DllExport void ry(
            float _ry)
    {
        m_ry = _ry;
    }

    /*!
     * @brief This function returns the value of member ry
     * @return Value of member ry
     */
    eProsima_user_DllExport float ry() const
    {
        return m_ry;
    }

    /*!
     * @brief This function returns a reference to member ry
     * @return Reference to member ry
     */
    eProsima_user_DllExport float& ry()
    {
        return m_ry;
    }


    /*!
     * @brief This function sets a value in member lt
     * @param _lt New value for member lt
     */
    eProsima_user_DllExport void lt(
            float _lt)
    {
        m_lt = _lt;
    }

    /*!
     * @brief This function returns the value of member lt
     * @return Value of member lt
     */
    eProsima_user_DllExport float lt() const
    {
        return m_lt;
    }

    /*!
     * @brief This function returns a reference to member lt
     * @return Reference to member lt
     */
    eProsima_user_DllExport float& lt()
    {
        return m_lt;
    }


    /*!
     * @brief This function sets a value in member rt
     * @param _rt New value for member rt
     */
    eProsima_user_DllExport void rt(
            float _rt)
    {
        m_rt = _rt;
    }

    /*!
     * @brief This function returns the value of member rt
     * @return Value of member rt
     */
    eProsima_user_DllExport float rt() const
    {
        return m_rt;
    }

    /*!
     * @brief This function returns a reference to member rt
     * @return Reference to member rt
     */
    eProsima_user_DllExport float& rt()
    {
        return m_rt;
    }


    /*!
     * @brief This function sets a value in member a
     * @param _a New value for member a
     */
    eProsima_user_DllExport void a(
            bool _a)
    {
        m_a = _a;
    }

    /*!
     * @brief This function returns the value of member a
     * @return Value of member a
     */
    eProsima_user_DllExport bool a() const
    {
        return m_a;
    }

    /*!
     * @brief This function returns a reference to member a
     * @return Reference to member a
     */
    eProsima_user_DllExport bool& a()
    {
        return m_a;
    }


    /*!
     * @brief This function sets a value in member b
     * @param _b New value for member b
     */
    eProsima_user_DllExport void b(
            bool _b)
    {
        m_b = _b;
    }

    /*!
     * @brief This function returns the value of member b
     * @return Value of member b
     */
    eProsima_user_DllExport bool b() const
    {
        return m_b;
    }

    /*!
     * @brief This function returns a reference to member b
     * @return Reference to member b
     */
    eProsima_user_DllExport bool& b()
    {
        return m_b;
    }


    /*!
     * @brief This function sets a value in member x
     * @param _x New value for member x
     */
    eProsima_user_DllExport void x(
            bool _x)
    {
        m_x = _x;
    }

    /*!
     * @brief This function returns the value of member x
     * @return Value of member x
     */
    eProsima_user_DllExport bool x() const
    {
        return m_x;
    }

    /*!
     * @brief This function returns a reference to member x
     * @return Reference to member x
     */
    eProsima_user_DllExport bool& x()
    {
        return m_x;
    }


    /*!
     * @brief This function sets a value in member y
     * @param _y New value for member y
     */
    eProsima_user_DllExport void y(
            bool _y)
    {
        m_y = _y;
    }

    /*!
     * @brief This function returns the value of member y
     * @return Value of member y
     */
    eProsima_user_DllExport bool y() const
    {
        return m_y;
    }

    /*!
     * @brief This function returns a reference to member y
     * @return Reference to member y
     */
    eProsima_user_DllExport bool& y()
    {
        return m_y;
    }


    /*!
     * @brief This function sets a value in member start
     * @param _start New value for member start
     */
    eProsima_user_DllExport void start(
            bool _start)
    {
        m_start = _start;
    }

    /*!
     * @brief This function returns the value of member start
     * @return Value of member start
     */
    eProsima_user_DllExport bool start() const
    {
        return m_start;
    }

    /*!
     * @brief This function returns a reference to member start
     * @return Reference to member start
     */
    eProsima_user_DllExport bool& start()
    {
        return m_start;
    }


    /*!
     * @brief This function sets a value in member select
     * @param _select New value for member select
     */
    eProsima_user_DllExport void select(
            bool _select)
    {
        m_select = _select;
    }

    /*!
     * @brief This function returns the value of member select
     * @return Value of member select
     */
    eProsima_user_DllExport bool select() const
    {
        return m_select;
    }

    /*!
     * @brief This function returns a reference to member select
     * @return Reference to member select
     */
    eProsima_user_DllExport bool& select()
    {
        return m_select;
    }


    /*!
     * @brief This function sets a value in member l1
     * @param _l1 New value for member l1
     */
    eProsima_user_DllExport void l1(
            bool _l1)
    {
        m_l1 = _l1;
    }

    /*!
     * @brief This function returns the value of member l1
     * @return Value of member l1
     */
    eProsima_user_DllExport bool l1() const
    {
        return m_l1;
    }

    /*!
     * @brief This function returns a reference to member l1
     * @return Reference to member l1
     */
    eProsima_user_DllExport bool& l1()
    {
        return m_l1;
    }


    /*!
     * @brief This function sets a value in member r1
     * @param _r1 New value for member r1
     */
    eProsima_user_DllExport void r1(
            bool _r1)
    {
        m_r1 = _r1;
    }

    /*!
     * @brief This function returns the value of member r1
     * @return Value of member r1
     */
    eProsima_user_DllExport bool r1() const
    {
        return m_r1;
    }

    /*!
     * @brief This function returns a reference to member r1
     * @return Reference to member r1
     */
    eProsima_user_DllExport bool& r1()
    {
        return m_r1;
    }


    /*!
     * @brief This function sets a value in member l3
     * @param _l3 New value for member l3
     */
    eProsima_user_DllExport void l3(
            bool _l3)
    {
        m_l3 = _l3;
    }

    /*!
     * @brief This function returns the value of member l3
     * @return Value of member l3
     */
    eProsima_user_DllExport bool l3() const
    {
        return m_l3;
    }

    /*!
     * @brief This function returns a reference to member l3
     * @return Reference to member l3
     */
    eProsima_user_DllExport bool& l3()
    {
        return m_l3;
    }


    /*!
     * @brief This function sets a value in member r3
     * @param _r3 New value for member r3
     */
    eProsima_user_DllExport void r3(
            bool _r3)
    {
        m_r3 = _r3;
    }

    /*!
     * @brief This function returns the value of member r3
     * @return Value of member r3
     */
    eProsima_user_DllExport bool r3() const
    {
        return m_r3;
    }

    /*!
     * @brief This function returns a reference to member r3
     * @return Reference to member r3
     */
    eProsima_user_DllExport bool& r3()
    {
        return m_r3;
    }



private:

    float m_lx{0.0};
    float m_ly{0.0};
    float m_rx{0.0};
    float m_ry{0.0};
    float m_lt{0.0};
    float m_rt{0.0};
    bool m_a{false};
    bool m_b{false};
    bool m_x{false};
    bool m_y{false};
    bool m_start{false};
    bool m_select{false};
    bool m_l1{false};
    bool m_r1{false};
    bool m_l3{false};
    bool m_r3{false};

};

} // namespace msg

} // namespace wlrobot

#endif // _FAST_DDS_GENERATED_WLROBOT_MSG_JOYSTICKMSG_HPP_


